(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["webpack-webpackSet-md"],{9772:function(e,n,t){"use strict";t.r(n);var s=function(){var e=this,n=e._self._c;return n("section",{staticClass:"content reasy-doc"},[n("h1",[e._v("webpack文档配置")]),e._m(0),n("p",[e._v("最后有附录，当前常用的完整配置文件。")]),e._m(1),e._m(2),e._m(3),e._m(4),e._m(5),e._m(6),e._m(7),n("p",[e._v("一般不需要单独配置,根据使用的打包命令去配置模式，若需要在不同模式的时候有不同的处理，")]),n("p",[e._v("写法如下：")]),e._m(8),e._m(9),e._m(10),n("p",[e._v(" 常用配置解析：")]),e._m(11),e._m(12),e._m(13),e._m(14),e._m(15),n("p",[e._v("但是有时候还是会需要修改下细节，常用配置如下：")]),e._m(16),e._m(17),e._m(18),e._m(19),e._m(20),e._m(21),e._m(22),e._m(23),e._m(24),e._m(25),e._m(26),e._m(27),e._m(28),e._m(29),e._m(30),e._m(31),e._m(32),e._m(33),e._m(34),e._m(35),e._m(36),e._m(37),e._m(38),e._m(39),e._m(40),e._m(41),e._m(42),e._m(43),e._m(44),e._m(45),e._m(46),e._m(47),e._m(48),e._m(49),n("p",[e._v("部分webpack插件查询链接：")]),e._m(50),e._m(51),n("p",[e._v("不同的模式默认会执行一些不同的优化")]),n("p",[e._v("这是部分优化配置")]),e._m(52),n("p",[e._v("其他")]),e._m(53),e._m(54),e._m(55),n("hr"),e._m(56),e._m(57),e._m(58),n("p",[e._v("该命令会将解析出来的 webpack 配置、包括链式访问规则和插件的提示打印。")]),e._m(59),n("p",[e._v("注意它输出的并不是一个有效的 webpack 配置文件，而是一个用于审查的被序列化的格式。")]),e._m(60),e._m(61),e._m(62),n("p",[e._v("基本和webpack一致, 参考webpack的配置即可")]),e._m(63),e._m(64),e._m(65),e._m(66),e._m(67),e._m(68),e._m(69),e._m(70),n("p",[e._v(" 新增loader")]),e._m(71),n("p",[e._v("修改loader")]),e._m(72),n("p",[e._v("删除和替换loader")]),e._m(73),e._m(74),e._m(75),e._m(76),e._m(77),n("p",[e._v("新增")]),e._m(78),n("p",[e._v("编辑")]),e._m(79),n("p",[e._v("删除")]),e._m(80),e._m(81),e._m(82),n("p",[e._v("其他")]),e._m(83),e._m(84),e._m(85),e._m(86),e._m(87),e._m(88),e._m(89),e._m(90),n("p",[e._v("需安装plugin")]),e._m(91),e._m(92),n("side-link")],1)},a=[function(){var e=this,n=e._self._c;return n("p",[e._v("主要记录一些"),n("code",[e._v("webpack")]),e._v("的常用配置说明以及"),n("code",[e._v("vue")]),e._v("项目中直接配置"),n("code",[e._v("vue.config.js")]),e._v("的常用配置说明。")])},function(){var e=this,n=e._self._c;return n("h2",{attrs:{id:"webpackpei-zhi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpackpei-zhi"}},[e._v("¶")]),e._v(" webpack配置")])},function(){var e=this,n=e._self._c;return n("p",[e._v("若要查看详细文档请看[官网]("),n("a",{attrs:{href:"https://v4.webpack.docschina.org/concepts/",title:"https://v4.webpack.docschina.org/concepts/"}},[e._v("https://v4.webpack.docschina.org/concepts/")]),e._v(")")])},function(){var e=this,n=e._self._c;return n("p",[e._v("环境： "),n("code",[e._v("webpack4+")]),e._v(" ，"),n("code",[e._v("node >= v12.13.0")]),e._v(", "),n("code",[e._v("webpack >= v4.37.0")])])},function(){var e=this,n=e._self._c;return n("h2",{attrs:{id:"ru-kou-pei-zhi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ru-kou-pei-zhi"}},[e._v("¶")]),e._v(" - 入口配置")])},function(){var e=this,n=e._self._c;return n("ol",[n("li",[n("p",[e._v("entry")]),n("blockquote",[n("p",[e._v("**入口起点(entry point)**指示 webpack 应该使用哪个模块，来作为构建其内部 "),n("a",{attrs:{href:"https://v4.webpack.docschina.org/concepts/dependency-graph/",title:"依赖图(dependency graph)"}},[n("em",[e._v("依赖图(dependency graph)")])]),e._v(" 的开始。进入入口起点后，webpack 会找出有哪些模块和库是入口起点（直接和间接）依赖的。")])]),n("p",[e._v("可以配置多个或单个。")]),n("pre",[n("code",{staticClass:"language-javascript"},[e._v("module.exports = {\n  entry: './path/to/my/entry/file.js'\n};\n// 多个写法\nentry: {\n    app: './src/app.js',\n    adminApp: './src/adminApp.js'\n}\n\n")])])]),n("li",[n("p",[e._v("output")]),n("blockquote",[n("p",[n("strong",[e._v("output")]),e._v(" 属性告诉 webpack 在哪里输出它所创建的 "),n("em",[e._v("bundle")]),e._v("，以及如何命名这些文件。主要输出文件的默认值是 "),n("code",[e._v("./dist/main.js")]),e._v("，其他生成文件默认放置在 "),n("code",[e._v("./dist")]),e._v(" 文件夹中。")])]),n("p",[e._v("多个入口的时候output 也是1个，需要注意区分生成文件")]),n("pre",[n("code",{staticClass:"language-javascript"},[e._v("output: {\n   path: path.resolve(__dirname, 'dist'),\n   filename: 'my-first-webpack.bundle.js'\n}\n// 多个写法\noutput: {\n    filename: '[name].js',\n    path: __dirname + '/dist'\n}\n\n")])])])])},function(){var e=this,n=e._self._c;return n("h2",{attrs:{id:"mo-shi-mode"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mo-shi-mode"}},[e._v("¶")]),e._v(" - 模式(mode) ")])},function(){var e=this,n=e._self._c;return n("blockquote",[n("p",[e._v("通过选择 "),n("code",[e._v("development")]),e._v(", "),n("code",[e._v("production")]),e._v(" 或 "),n("code",[e._v("none")]),e._v(" 之中的一个，来设置 "),n("code",[e._v("mode")]),e._v(" 参数，你可以启用 webpack 内置在相应环境下的优化。其默认值为 "),n("code",[e._v("production")]),e._v("。")])])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v('const isProd = process.env.NODE_ENV === "production"\n//isProd  就是判断是否时生产模式\n\nif (isProd) {\n  // 可以生产模式再做特殊处理\n  webpackConfig.externals = {\n    vue: "Vue",\n    "vue-router": "VueRouter",\n    "highlight.js": "hljs"\n  };\n}\n\n')])])},function(){var e=this,n=e._self._c;return n("h2",{attrs:{id:"ben-di-fu-wu-qi-devserver-pei-zhi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ben-di-fu-wu-qi-devserver-pei-zhi"}},[e._v("¶")]),e._v(" - 本地服务器（devServer）配置")])},function(){var e=this,n=e._self._c;return n("blockquote",[n("p",[n("code",[e._v("webpack-dev-server")]),e._v(" 为你提供了一个基本的 web server，并且具有 live reloading(实时重新加载) 功能")])])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v(' devServer: {\n    host: "127.0.0.1", // 默认127.0.0.1，注意 0.0.0.0 时才可以被外部其他主机访问到本地的地址\n    compress: true, // 是否启用一切服务都启用 gzip 压缩： 尝试使用压缩是否提升速度,默认为 false\n    lazy: true, // 懒加载是否开启 默认为 false\n    port: 9000, //端口 默认8080\n    publicPath: "/", //此路径下的打包文件可在浏览器中访问。\n    // 假设服务器运行在 http://localhost:8080 并且 output.filename 被设置为 bundle.js。\n    // 默认 devServer.publicPath 是 \'/\'，所以你的包(bundle)可以通过 \n    // http://localhost:8080/bundle.js 访问。\n  }\n')])])},function(){var e=this,n=e._self._c;return n("p",[e._v("有时候可能需要再服务器上做一些处理，或使用代理请求，就使用"),n("code",[e._v("proxy")])])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v("devServer: {\n    proxy:{\n      '/api': 'http://localhost:3000',\n      '/api1': {\n        // 代理请求的地址\n        target: 'http://localhost:3000',\n        // 代理请求转换路径 重写路径\n        pathRewrite: { '^/api': '' },\n        // 也可以对请求进行过滤不使用代理\n        bypass: function (req, res) {\n          if (req.method == \"GET\") {\n            console.log(\"Skipping proxy for browser request.\");\n            return res.url;\n          }\n        }\n      },\n    },\n    // 多个代理到同一个地址的时候，可以使用数组配置方式\n    proxy: [\n      {\n        // 正则匹配的路径\n        context: ['/auth', '/api'],\n        // 代理请求的地址\n        target: 'http://localhost:3000',\n      },\n    ],\n  }\n")])])},function(){var e=this,n=e._self._c;return n("h2",{attrs:{id:"jie-xi-resolve-pei-zhi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jie-xi-resolve-pei-zhi"}},[e._v("¶")]),e._v(" - 解析（resolve）配置")])},function(){var e=this,n=e._self._c;return n("p",[e._v("这些选项能设置模块如何被解析。"),n("code",[e._v("webpack")]),e._v(" 基本已经提供合理的默认值。")])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v('resolve: {\n  extensions: [".js", ".vue", ".json"],  // 引用时不写后缀的文件查询顺序 默认[".js", ".vue"]\n  // 配置 import 或 require 的别名，来确保模块引入变得更简单\n  alias: {\n    "@": path.resolve(__dirname, "../src"),\n    packages: path.resolve(__dirname, "../packages"),\n    demo: path.resolve(__dirname, "../demo")\n  },\n  // 告诉 webpack 解析模块时应该搜索的目录。默认["node_modules"]\n  modules: ["./src/components","node_modules"]\n}\n')])])},function(){var e=this,n=e._self._c;return n("h2",{attrs:{id:"loader-pei-zhi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#loader-pei-zhi"}},[e._v("¶")]),e._v(" - loader 配置")])},function(){var e=this,n=e._self._c;return n("blockquote",[n("p",[e._v("webpack 只能理解 JavaScript 和 JSON 文件。"),n("strong",[e._v("loader")]),e._v(" 让 webpack 能够去处理其他类型的文件，并将它们转换为有效模块，以供应用程序使用。")])])},function(){var e=this,n=e._self._c;return n("p",[e._v("我们一般需要转换的就是"),n("code",[e._v("vue")]),e._v("，"),n("code",[e._v("es6")]),e._v("，"),n("code",[e._v("scss")]),e._v("，图片等")])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"loaderde-pei-zhi-ge-shi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#loaderde-pei-zhi-ge-shi"}},[e._v("¶")]),e._v(" - - loader的配置格式")])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v(' module: {\n    rules: [\n       // 单个loader的配置\n      { \n        test: /\\.(jsx?|babel|es6)$/,  // 正则匹配文件\n        // include: process.cwd(), \n        include: /node_modules\\/highlight.js/, // 包换的文件\n        exclude: /node_modules/,  // 排除的文件\n        loader: "babel-loader", // 使用的loader\n        //loader的配置项和参数，根据loader自身的定义来\n        options: {  \n          presets: [\n            [\n              "@babel/preset-env",\n              {\n                useBuiltIns: "usage",\n                corejs: 3,\n                // caller.target 等于 webpack 配置的 target 选项\n                targets: { ie: "11" }\n              }\n            ]\n          ]\n        }\n      },\n      // 多个loader的配置\n      {\n        test: /\\.(scss|css)$/,\n        // 使用use 数组 进行多个loader的配置\n        use: [\n          "style-loader",\n          "css-loader",\n          {\n            loader: "sass-loader",\n            options: {\n              prependData: variables //`@import "src/scss/varibles.scss";`\n            }\n          }\n        ]\n    ]\n}\n')])])},function(){var e=this,n=e._self._c;return n("blockquote",[n("p",[e._v("注意："),n("code",[e._v("loader")]),e._v(" 从右到左（或从下到上）地取值(evaluate)/执行(execute)。在上面面的示例中，从 "),n("code",[e._v("sass-loader")]),e._v(" 开始执行，然后继续执行 "),n("code",[e._v("css-loader")]),e._v("，最后以 "),n("code",[e._v("style-loader")]),e._v(" 为结束")])])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"chang-yong-loaderji-he"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#chang-yong-loaderji-he"}},[e._v("¶")]),e._v(" - - 常用loader集合")])},function(){var e=this,n=e._self._c;return n("h4",{attrs:{id:"yu-fa-zhuan-huan"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#yu-fa-zhuan-huan"}},[e._v("¶")]),e._v(" 语法转换")])},function(){var e=this,n=e._self._c;return n("ul",[n("li",[n("p",[n("a",{attrs:{href:"https://webpack.docschina.org/loaders/babel-loader",title:"babel-loader"}},[e._v("babel-loader")]),e._v(" 使用 "),n("a",{attrs:{href:"https://babeljs.io/",title:"Babel"}},[e._v("Babel")]),e._v(" 加载 ES2015+ 代码并将其转换为 ES5。")])]),n("li",[n("p",[n("a",{attrs:{href:"https://github.com/TypeStrong/ts-loader",title:"ts-loader"}},[e._v("ts-loader")]),e._v(" 像加载 JavaScript 一样加载 "),n("a",{attrs:{href:"https://www.typescriptlang.org/",title:"TypeScript"}},[e._v("TypeScript")]),e._v(" 2.0+。")])])])},function(){var e=this,n=e._self._c;return n("h4",{attrs:{id:"mo-ban"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mo-ban"}},[e._v("¶")]),e._v(" 模板")])},function(){var e=this,n=e._self._c;return n("ul",[n("li",[n("p",[n("a",{attrs:{href:"https://webpack.docschina.org/loaders/html-loader",title:"html-loader"}},[e._v("html-loader")]),e._v(" 将 HTML 导出为字符串，需要传入静态资源的引用路径。")])]),n("li",[n("p",[n("a",{attrs:{href:"https://github.com/peerigon/markdown-loader",title:"markdown-loader"}},[e._v("markdown-loader")]),e._v(" 将 Markdown 编译为 HTML。")])])])},function(){var e=this,n=e._self._c;return n("h4",{attrs:{id:"yang-shi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#yang-shi"}},[e._v("¶")]),e._v(" 样式")])},function(){var e=this,n=e._self._c;return n("ul",[n("li",[n("p",[n("a",{attrs:{href:"https://webpack.docschina.org/loaders/style-loader",title:"style-loader"}},[e._v("style-loader")]),e._v(" 将模块导出的内容作为样式并添加到 DOM 中。")])]),n("li",[n("p",[n("a",{attrs:{href:"https://webpack.docschina.org/loaders/css-loader",title:"css-loader"}},[e._v("css-loader")]),e._v(" 加载 CSS 文件并解析 import 的 CSS 文件，最终返回 CSS 代码。")])]),n("li",[n("p",[n("a",{attrs:{href:"https://webpack.docschina.org/loaders/postcss-loader",title:"postcss-loader"}},[e._v("postcss-loader")]),e._v(" 使用 "),n("a",{attrs:{href:"http://postcss.org/",title:"PostCSS"}},[e._v("PostCSS")]),e._v(" 加载并转换 CSS/SSS 文件。 使用时还需安装postcss，在 "),n("code",[e._v("css-loader")]),e._v(" 和 "),n("code",[e._v("style-loader")]),e._v(" "),n("strong",[e._v("之前")]),e._v("使用它，但是在其他预处理器（例如："),n("code",[e._v("sass|less|stylus-loader")]),e._v("）"),n("strong",[e._v("之后")]),e._v("使用")])]),n("li",[n("p",[n("a",{attrs:{href:"https://webpack.docschina.org/loaders/less-loader",title:"less-loader"}},[e._v("less-loader")]),e._v(" 加载并编译 LESS 文件。")])]),n("li",[n("p",[n("a",{attrs:{href:"https://webpack.docschina.org/loaders/sass-loader",title:"sass-loader"}},[e._v("sass-loader")]),e._v(" 加载并编译 SASS/SCSS 文件。")])]),n("li",[n("p",[n("a",{attrs:{href:"https://webpack.docschina.org/loaders/stylus-loader/",title:"stylus-loader"}},[e._v("stylus-loader")]),e._v(" 加载并编译 Stylus 文件。")])])])},function(){var e=this,n=e._self._c;return n("h4",{attrs:{id:"kuang-jia"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#kuang-jia"}},[e._v("¶")]),e._v(" 框架")])},function(){var e=this,n=e._self._c;return n("ul",[n("li",[n("a",{attrs:{href:"https://vue-loader-v14.vuejs.org/zh-cn/options.html",title:"vue-loader"}},[e._v("vue-loader")]),e._v(" 加载并编译 "),n("a",{attrs:{href:"https://vuejs.org/v2/guide/components.html",title:"Vue 组件"}},[e._v("Vue 组件")]),e._v("。需要配合"),n("code",[e._v("VueLoaderPlugin")]),e._v(" 使用。")])])},function(){var e=this,n=e._self._c;return n("h4",{attrs:{id:"tu-pian"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tu-pian"}},[e._v("¶")]),e._v(" 图片")])},function(){var e=this,n=e._self._c;return n("ul",[n("li",[n("p",[n("a",{attrs:{href:"https://github.com/TheLarkInn/angular2-template-loader",title:"url-loader"}},[e._v("url-loader")]),e._v(" 加载并编译组件，可以配置limit，在文件大小（单位为字节）低于指定的限制时，可以返回一个 DataURL。v5后不使用该"),n("code",[e._v("loader")]),e._v(",使用"),n("a",{attrs:{href:"https://webpack.docschina.org/guides/asset-modules/",title:"asset module"}},[e._v("asset module")]),e._v("来配置使用。")])]),n("li",[n("p",[n("code",[e._v("svg-sprite-loader")]),e._v(" 将svg图片以雪碧图的方式在项目中加载。")])])])},function(){var e=this,n=e._self._c;return n("h4",{attrs:{id:"qi-ta"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#qi-ta"}},[e._v("¶")]),e._v(" 其他")])},function(){var e=this,n=e._self._c;return n("ul",[n("li",[n("p",[n("a",{attrs:{href:"https://webpack.docschina.org/loaders/cache-loader/",title:"cache-loader"}},[e._v("cache-loader")]),e._v(" 允许缓存到（默认）磁盘或数据库 ，在一些性能开销较大的 loader 之前添加 cache-loader，以便将结果缓存到磁盘里。")])]),n("li",[n("p",[n("code",[e._v("eslint-loader")]),e._v(" ，v5版本已弃用，推荐使用"),n("code",[e._v("eslint-webpack-plugin")])])]),n("li",[n("p",[n("code",[e._v("file-loader")]),e._v("解析文件地址并加载。")])])])},function(){var e=this,n=e._self._c;return n("h2",{attrs:{id:"cha-jian-plugins-pei-zhi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cha-jian-plugins-pei-zhi"}},[e._v("¶")]),e._v(" - 插件plugins 配置")])},function(){var e=this,n=e._self._c;return n("blockquote",[n("p",[e._v("📌Plugin 用于扩展 Webpack 功能，各种各样的 Plugin 几乎让 Webpack 可以做任何构建相关的事情。")])])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"pei-zhi-plugin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pei-zhi-plugin"}},[e._v("¶")]),e._v(" - - 配置 Plugin")])},function(){var e=this,n=e._self._c;return n("p",[e._v("Plugin 的配置很简单，"),n("code",[e._v("plugins")]),e._v(" 配置项接受一个数组，数组里每一项都是一个要使用的 "),n("code",[e._v("Plugin")]),e._v(" 的"),n("code",[e._v("实例")]),e._v("，"),n("code",[e._v("Plugin")]),e._v(" 需要的参数通过"),n("code",[e._v("构造函数")]),e._v("传入。")])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v("const CommonsChunkPlugin = require('webpack/lib/optimize/CommonsChunkPlugin');\n\nmodule.exports = {\n  plugins: [\n    // 所有页面都会用到的公共代码提取到 common 代码块中\n    new CommonsChunkPlugin({\n      name: 'common',\n      chunks: ['a', 'b']\n    }),\n  ]\n};\n")])])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"chang-yong-cha-jian-ji-he"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#chang-yong-cha-jian-ji-he"}},[e._v("¶")]),e._v(" - - 常用插件集合")])},function(){var e=this,n=e._self._c;return n("h4",{attrs:{id:"html"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[e._v("¶")]),e._v(" HTML")])},function(){var e=this,n=e._self._c;return n("ul",[n("li",[n("p",[n("a",{attrs:{href:"https://v4.webpack.docschina.org/plugins/html-webpack-plugin",title:"HtmlWebpackPlugin"}},[e._v("HtmlWebpackPlugin")]),e._v("简单创建 HTML 文件，用于服务器访问。")])]),n("li",[n("p",[n("code",[e._v("PreloadPlugin")]),e._v(" 自动获取异步js模块文件，并通过"),n("code",[e._v("<link rel='preload'>")]),e._v("或者"),n("code",[e._v("<link rel='preload'>")]),e._v("的方式引入到页面中")])])])},function(){var e=this,n=e._self._c;return n("h4",{attrs:{id:"css-xiang-guan"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#css-xiang-guan"}},[e._v("¶")]),e._v(" CSS 相关")])},function(){var e=this,n=e._self._c;return n("ul",[n("li",[n("p",[n("a",{attrs:{href:"https://v4.webpack.docschina.org/plugins/mini-css-extract-plugin",title:"MiniCssExtractPlugin"}},[e._v("MiniCssExtractPlugin")]),e._v("为每个引入 CSS 的 JS 文件创建一个 CSS 文件。")])]),n("li",[n("p",[n("a",{attrs:{href:"https://v4.webpack.docschina.org/plugins/extract-text-webpack-plugin",title:"ExtractTextWebpackPlugin"}},[e._v("ExtractTextWebpackPlugin")]),e._v("从 bundle 中提取文本（CSS）到单独的文件。")])]),n("li",[n("p",[n("a",{attrs:{href:"https://webpack.docschina.org/plugins/css-minimizer-webpack-plugin/",title:"OptimizeCSSAssetsPlugin"}},[e._v("OptimizeCSSAssetsPlugin")]),n("a",{attrs:{href:"https://webpack.docschina.org/plugins/css-minimizer-webpack-plugin/",title:" "}}),e._v("使用 "),n("a",{attrs:{href:"https://cssnano.co/",title:"cssnano"}},[e._v("cssnano")]),e._v(" 优化和压缩 CSS。")])])])},function(){var e=this,n=e._self._c;return n("h4",{attrs:{id:"you-hua"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#you-hua"}},[e._v("¶")]),e._v(" 优化")])},function(){var e=this,n=e._self._c;return n("ul",[n("li",[n("p",[n("a",{attrs:{href:"https://v4.webpack.docschina.org/plugins/hot-module-replacement-plugin",title:"HotModuleReplacementPlugin"}},[e._v("HotModuleReplacementPlugin")]),e._v("启用模块热更新替换(Enable Hot Module Replacement - HMR)")])]),n("li",[n("p",[n("a",{attrs:{href:"https://v4.webpack.docschina.org/plugins/babel-minify-webpack-plugin",title:"BabelMinifyWebpackPlugin"}},[e._v("BabelMinifyWebpackPlugin")]),e._v("使用 "),n("a",{attrs:{href:"https://github.com/babel/minify",title:"babel-minify"}},[e._v("babel-minify")]),e._v("进行压缩优化")])]),n("li",[n("p",[n("a",{attrs:{href:"https://v4.webpack.docschina.org/plugins/dll-plugin",title:"DllPlugin"}},[e._v("DllPlugin")]),e._v("为了极大减少构建时间，进行分离打包。")])]),n("li",[n("p",[n("a",{attrs:{href:"https://v4.webpack.docschina.org/plugins/define-plugin",title:"DefinePlugin"}},[e._v("DefinePlugin")]),e._v("允许在编译时(compile time)配置的全局常量,，我们可以在模块当中直接使用这些变量，无需作任何声明。")])]),n("li",[n("p",[n("a",{attrs:{href:"https://v4.webpack.docschina.org/plugins/ignore-plugin",title:"IgnorePlugin"}},[e._v("IgnorePlugin")]),e._v("从 bundle 中排除某些模块。")])]),n("li",[n("p",[n("a",{attrs:{href:"https://v4.webpack.docschina.org/plugins/commons-chunk-plugin",title:"CommonsChunkPlugin"}},[e._v("CommonsChunkPlugin")]),e._v("提取 chunks 之间共享的通用模块。")])]),n("li",[n("p",[n("a",{attrs:{href:"https://v4.webpack.docschina.org/plugins/limit-chunk-count-plugin",title:"LimitChunkCountPlugin"}},[e._v("LimitChunkCountPlugin")]),e._v("设置 chunk 的最小/最大限制，以微调和控制 chunk。")])]),n("li",[n("p",[n("a",{attrs:{href:"https://v4.webpack.docschina.org/plugins/min-chunk-size-plugin",title:"MinChunkSizePlugin"}},[e._v("MinChunkSizePlugin")]),e._v("确保 chunk 大小超过指定限制。")])]),n("li",[n("p",[n("a",{attrs:{href:"https://v4.webpack.docschina.org/plugins/source-map-dev-tool-plugin",title:"SourceMapDevToolPlugin"}},[e._v("SourceMapDevToolPlugin")]),e._v("对 source map 进行更细粒度的控。")])]),n("li",[n("p",[n("a",{attrs:{href:"https://v4.webpack.docschina.org/plugins/eval-source-map-dev-tool-plugin",title:"EvalSourceMapDevToolPlugin"}},[e._v("EvalSourceMapDevToolPlugin")]),e._v("对 eval source map 进行更粒度的控制。")])]),n("li",[n("p",[n("code",[e._v("HappyPack")]),e._v(" 能让 webpack 把任务分解给多个子进程去并发的执行，子进程处理完后再把结果发送给主进程当项目较小时，多线程打包反而会使打包速度变慢**。**")])]),n("li",[n("p",[n("a",{attrs:{href:"https://v4.webpack.docschina.org/plugins/zopfli-webpack-plugin",title:"ZopfliWebpackPlugin"}},[e._v("ZopfliWebpackPlugin")]),e._v("通过 node-zopfli 将资源预先压缩的版本。")])])])},function(){var e=this,n=e._self._c;return n("h4",{attrs:{id:"qi-ta-1"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#qi-ta-1"}},[e._v("¶")]),e._v(" 其他")])},function(){var e=this,n=e._self._c;return n("ul",[n("li",[n("p",[n("a",{attrs:{href:"https://v4.webpack.docschina.org/plugins/npm-install-webpack-plugin",title:"NpmInstallWebpackPlugin"}},[e._v("NpmInstallWebpackPlugin")]),e._v("在开发环境下自动安装缺少的依赖。")])]),n("li",[n("p",[n("a",{attrs:{href:"https://v4.webpack.docschina.org/plugins/copy-webpack-plugin",title:"CopyWebpackPlugin"}},[e._v("CopyWebpackPlugin")]),e._v("将单个文件或整个目录复制到构建目录【版本@6.1.1】。")])]),n("li",[n("p",[n("a",{attrs:{href:"https://v4.webpack.docschina.org/plugins/progress-plugin",title:"ProgressPlugin"}},[e._v("ProgressPlugin")]),e._v("报告编译进度，显示编译进度。")])]),n("li",[n("p",[n("a",{attrs:{href:"https://v4.webpack.docschina.org/plugins/uglifyjs-webpack-plugin",title:"UglifyjsWebpackPlugin"}},[e._v("UglifyjsWebpackPlugin")]),e._v("对于js文件进行压缩, 它使用的是单线程压缩代码，打包时间较慢，所以可以在开发环境将其关闭，生产环境部署时再把它打开。")])]),n("li",[n("p",[n("code",[e._v("ParallelUglifyPlugin")]),e._v(" 多线程 使用"),n("a",{attrs:{href:"https://v4.webpack.docschina.org/plugins/uglifyjs-webpack-plugin",title:"UglifyjsWebpackPlugin"}},[e._v("UglifyjsWebpackPlugin")]),e._v(" 加快压缩。")])]),n("li",[n("p",[n("code",[e._v("VueLoaderPlugin")]),e._v(" 配合"),n("code",[e._v("vue-loader")]),e._v("使用。")])]),n("li",[n("p",[n("code",[e._v("clean-webpack-plugin")]),e._v(" 用于在打包前清理上一次项目生成的 bundle 文件。")])])])},function(){var e=this,n=e._self._c;return n("p",[n("a",{attrs:{href:"http://www.febeacon.com/webpack-plugins-docs-cn/",title:"webpack 插件合集"}},[e._v("webpack 插件合集")])])},function(){var e=this,n=e._self._c;return n("h2",{attrs:{id:"you-hua-pei-zhi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#you-hua-pei-zhi"}},[e._v("¶")]),e._v(" - 优化配置")])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v("module.exports = {\n  //...\n  optimization: {\n    //告知 webpack 使用 TerserPlugin 或其它在 optimization.minimizer定义的插件压缩 bundle。\n    minimize: false,\n    //允许你通过提供一个或多个定制过的 TerserPlugin 实例，覆盖默认压缩工具(minimizer)。\n    minimizer: [\n      new TerserPlugin({\n        parallel: true,\n        terserOptions: {\n          // https://github.com/webpack-contrib/terser-webpack-plugin#terseroptions\n        },\n      }),\n    ],\n    // 将 optimization.runtimeChunk 设置为 true 或 'multiple'，\n    // 会为每个入口添加一个只含有 runtime 的额外 chunk\n    runtimeChunk: {\n      name: 'runtime',\n    },\n    //根据以下条件自动拆分 chunks\n    splitChunks: {\n      chunks: 'async',\n      minSize: 20000,\n      minRemainingSize: 0,\n      minChunks: 1,\n      maxAsyncRequests: 30,\n      maxInitialRequests: 30,\n      enforceSizeThreshold: 50000,\n      cacheGroups: {\n        defaultVendors: {\n          test: /[\\\\/]node_modules[\\\\/]/,\n          priority: -10,\n          reuseExistingChunk: true,\n        },\n        default: {\n          minChunks: 2,\n          priority: -20,\n          reuseExistingChunk: true,\n        },\n      },\n    },\n  },\n};\n")])])},function(){var e=this,n=e._self._c;return n("ul",[n("li",[e._v("修改调试文件的目录[这个正常情况可以不需要，若调试无法快速找到文件可以加上该配置]")])])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v(' output: {\n    devtoolModuleFilenameTemplate: info => {\n      // 调试文件查找，\n      const resPath = info.resourcePath;\n      if (/node_modules/.test(resPath) || /\\.js$/.test(resPath)) {\n        return `webpack:///${resPath.replace(/^(\\.\\/)?src/, "my-code/src")}`;\n      } else if (/\\.vue$/.test(resPath)) {\n        if (!/type=script/.test(info.identifier)) {\n          return `webpack:///${resPath.replace(/^(\\.\\/)?src/, "my-code/src")}`;\n        }\n      }\n      return `webpack:///${resPath}?${info.hash}`;\n    }\n  },\n')])])},function(){var e=this,n=e._self._c;return n("h2",{attrs:{id:"vue.config.jspei-zhi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue.config.jspei-zhi"}},[e._v("¶")]),e._v(" vue.config.js配置")])},function(){var e=this,n=e._self._c;return n("blockquote",[n("p",[e._v("Vue3.0不在有"),n("code",[e._v("webpack.config.js")]),e._v("的配置；但是不可避免,在项目开发中我们肯定会存在一些特殊的需求需要调整"),n("code",[e._v("webpack")]),e._v(", 这个时候，在Vue3.0的项目当中，我们就需要在根目录创建"),n("code",[e._v("vue.config.js")]),e._v("去完成"),n("code",[e._v("webpack")]),e._v("的一些特殊配置,默认它会被 "),n("code",[e._v("@vue/cli-service")]),e._v(" 自动加载")])])},function(){var e=this,n=e._self._c;return n("p",[e._v("配置文档："),n("a",{attrs:{href:"https://cli.vuejs.org/zh/config/",title:"https://cli.vuejs.org/zh/config/"}},[e._v("https://cli.vuejs.org/zh/config/")])])},function(){var e=this,n=e._self._c;return n("h2",{attrs:{id:"shen-cha-xiang-mu-de-webpack-pei-zhi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#shen-cha-xiang-mu-de-webpack-pei-zhi"}},[e._v("¶")]),e._v(" - 审查项目的 webpack 配置")])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v("vue inspect > output.js\n")])])},function(){var e=this,n=e._self._c;return n("h2",{attrs:{id:"ru-kou-pei-zhi-1"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ru-kou-pei-zhi-1"}},[e._v("¶")]),e._v(" - 入口配置")])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v("module.exports = {\n  pages: {\n    index: {\n      // page 的入口\n      entry: 'src/index/main.js',\n      // 模板来源\n      template: 'public/index.html',\n      // 在 dist/index.html 的输出\n      filename: 'index.html',\n      // 当使用 title 选项时，\n      // template 中的 title 标签需要是 <title><%= htmlWebpackPlugin.options.title %></title>\n      title: 'Index Page',\n      // 在这个页面中包含的块，默认情况下会包含\n      // 提取出来的通用 chunk 和 vendor chunk。\n      chunks: ['chunk-vendors', 'chunk-common', 'index']\n    },\n    // 当使用只有入口的字符串格式时，\n    // 模板会被推导为 `public/subpage.html`\n    // 并且如果找不到的话，就回退到 `public/index.html`。\n    // 输出文件名会被推导为 `subpage.html`。\n    subpage: 'src/subpage/main.js'\n  }\n}\n")])])},function(){var e=this,n=e._self._c;return n("h2",{attrs:{id:"ben-di-fu-wu-qi-devserver-pei-zhi-1"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ben-di-fu-wu-qi-devserver-pei-zhi-1"}},[e._v("¶")]),e._v(" - 本地服务器（devServer）配置")])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v("module.exports = {\n  devServer: {\n    proxy: 'http://localhost:4000'\n  }\n}\n")])])},function(){var e=this,n=e._self._c;return n("h2",{attrs:{id:"jie-xi-pei-zhi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jie-xi-pei-zhi"}},[e._v("¶")]),e._v(" - 解析配置")])},function(){var e=this,n=e._self._c;return n("p",[e._v("在"),n("code",[e._v("chainWebpack")]),e._v(" 或"),n("code",[e._v("configureWebpack")]),e._v(" 都可以使用 ")])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v("module.exports = {\n  chainWebpack: config => {\n    config.resolve.alias\n        .set('@', resolve('src')) \n        .set('api', resolve('src/apis'))\n        .set('common', resolve('src/common'))\n  }\n}\n\n")])])},function(){var e=this,n=e._self._c;return n("h2",{attrs:{id:"loaderpei-zhi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#loaderpei-zhi"}},[e._v("¶")]),e._v(" - loader配置")])},function(){var e=this,n=e._self._c;return n("h4",{attrs:{id:"1.-cssde-loaderke-yi-zhi-jie-pei-zhi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#1.-cssde-loaderke-yi-zhi-jie-pei-zhi"}},[e._v("¶")]),e._v(" 1. css的loader可以直接配置")])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v('  css: {\n    loaderOptions: {\n      scss: {\n        prependData: \'@import "./src/common/css/variables.scss";\'\n      },\n      postcss: {\n        plugins: [\n          require("autoprefixer")({ overrideBrowserslist: ["ie >= 10"] })\n        ]\n      }\n    }\n  },\n')])])},function(){var e=this,n=e._self._c;return n("h4",{attrs:{id:"2.-chainwebpack-xiu-gai-loaderfang-shi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#2.-chainwebpack-xiu-gai-loaderfang-shi"}},[e._v("¶")]),e._v(" 2. chainWebpack 修改loader方式")])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v("// vue.config.js\nmodule.exports = {\n  chainWebpack: config => {\n    // GraphQL Loader\n    config.module\n      .rule('graphql')\n      .test(/\\.graphql$/)\n      .use('graphql-tag/loader')\n        .loader('graphql-tag/loader')\n        .end()\n      // 你还可以再添加一个 loader\n      .use('other-loader')\n        .loader('other-loader')\n        .end()\n  }\n}\n")])])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v("// 修改loader\nmodule.exports = {\n  chainWebpack: config => {\n    config.module\n      .rule('vue')\n      .use('vue-loader')\n        .tap(options => {\n          // 修改它的选项...\n          return options\n        })\n  }\n}\n\n\n")])])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v("module.exports = {\n  chainWebpack: config => {\n    const svgRule = config.module.rule('svg')\n    // 清除已有的所有 loader。\n    // 如果你不这样做，接下来的 loader 会附加在该规则现有的 loader 之后。\n    svgRule.uses.clear()\n    // 添加要替换的 loader\n    svgRule.use('vue-svg-loader').loader('vue-svg-loader')\n  }\n}\n")])])},function(){var e=this,n=e._self._c;return n("h4",{attrs:{id:"3.-configurewebpack-tian-jia-xin-zeng-jian-yi-shi-yong-zhe-ge"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#3.-configurewebpack-tian-jia-xin-zeng-jian-yi-shi-yong-zhe-ge"}},[e._v("¶")]),e._v(" 3. configureWebpack 添加 【新增建议使用这个】")])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v("configureWebpack: (config) => {\n    config.module.rules.push({\n      // 处理jquery\n      test: require.resolve('jquery'),\n      use: [{\n        loader: 'expose-loader',\n        options: 'jquery'\n      }, {\n        loader: 'expose-loader',\n        options: '$'\n      }, {\n        loader: 'expose-loader',\n        options: 'jQuery'\n      }]\n    })\n  }\n")])])},function(){var e=this,n=e._self._c;return n("h2",{attrs:{id:"plugins-pei-zhi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#plugins-pei-zhi"}},[e._v("¶")]),e._v(" - plugins 配置")])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"chainwebpackxiu-gai-plugin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#chainwebpackxiu-gai-plugin"}},[e._v("¶")]),e._v(" - - chainWebpack修改plugin")])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v("chainWebpack: (config) => {\n    // 新增一个`hot-hash-webpack-plugin`\n    // 注意：这里use的时候不需要使用`new HotHashWebpackPlugin()`\n    config.plugin('hotHash')\n          .use(HotHashWebpackPlugin, [{ version: '1.0.0' }]);\n}\n\n")])])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v("// vue.config.js\nmodule.exports = {\n  chainWebpack: config => {\n    config\n      .plugin('html')\n      .tap(args => {\n        return [/* 传递给 html-webpack-plugin's 构造函数的新参数 */]\n      })\n  }\n}\n")])])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v(" chainWebpack: (config) => {\n    // vue-cli3.X 会自动进行模块分割抽离，如果不需要进行分割,可以手动删除\n    config.optimization.delete('splitChunks'); \n }\n\n")])])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"configurewebpackxiu-gai-plugin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#configurewebpackxiu-gai-plugin"}},[e._v("¶")]),e._v(" - - configureWebpack修改plugin")])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v("module.exports = {\n  configureWebpack: {\n    plugins: [\n      new MyAwesomeWebpackPlugin()\n    ]\n  }\n}\n")])])},function(){var e=this,n=e._self._c;return n("ul",[n("li",[e._v("解决dark-scss icon 图标显示乱码问题")])])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v('  configureWebpack: config => {\n  // 解决dark-scss icon 图标问题 需要试验下 1.39.0+ 版本已经解决了这个问题\n  // 回退icon的图标转换 不转换成双字节字符\n  // 只有生产环境需要\n  config.module.rules\n    .filter(rule => {\n      return rule.test.toString().indexOf("scss") !== -1;\n    })\n    .forEach(rule => {\n      rule.oneOf.forEach(oneOfRule => {\n        const sassLoaderIndex = oneOfRule.use.findIndex(\n          item => item.loader === sassLoader\n        );\n        oneOfRule.use.splice(sassLoaderIndex, 0, {\n          loader: require.resolve("css-unicode-loader")\n        });\n      });\n    });\n  },\n\n')])])},function(){var e=this,n=e._self._c;return n("ul",[n("li",[e._v("开发环境配置原始文件路径【不能快速找到原始路径时使用】")])])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v('  configureWebpack: config => {\n  // 为开发环境修改配置...  这个正常情况可以不需要，若调试无法快速找到文件可以加上该配置\n      config.output.devtoolModuleFilenameTemplate = info => {\n        const resPath = info.resourcePath;\n        if (/node_modules/.test(resPath) || /\\.js$/.test(resPath)) {\n          return `webpack:///${resPath.replace(/^(\\.\\/)?src/, "my-code/src")}`;\n        } else if (/\\.vue$/.test(resPath)) {\n          if (!/type=script/.test(info.identifier)) {\n            return `webpack:///${resPath.replace(\n              /^(\\.\\/)?src/,\n              "my-code/src"\n            )}`;\n          }\n        }\n\n        return `webpack:///${resPath}?${info.hash}`;\n      };\n  }\n')])])},function(){var e=this,n=e._self._c;return n("h2",{attrs:{id:"fu-webpackhe-vue.config.js"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fu-webpackhe-vue.config.js"}},[e._v("¶")]),e._v(" 附：webpack和vue.config.js")])},function(){var e=this,n=e._self._c;return n("h2",{attrs:{id:"chang-yong-webpackpei-zhi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#chang-yong-webpackpei-zhi"}},[e._v("¶")]),e._v(" - 常用webpack配置")])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v('// 解析路径\nconst path = require("path"); \nconst webpack = require("webpack");\n// 为每个引入 CSS 的 JS 文件创建一个 CSS 文件。\nconst MiniCssExtractPlugin = require("mini-css-extract-plugin");\n// 用于在打包前清理上一次项目生成的 bundle 文件。\nconst { CleanWebpackPlugin } = require("clean-webpack-plugin");\n// 简单创建 HTML 文件，用于服务器访问。\nconst HtmlWebpackPlugin = require("html-webpack-plugin");\n// 显示打包构建进度的插件\nconst ProgressBarPlugin = require("progress-bar-webpack-plugin");\n// 配合vue-loader使用。\nconst VueLoaderPlugin = require("vue-loader/lib/plugin");\n// 使用 cssnano 优化和压缩 CSS。\nconst OptimizeCSSAssetsPlugin = require("optimize-css-assets-webpack-plugin");\n// 对于js文件进行压缩, \nconst UglifyJsPlugin = require("uglifyjs-webpack-plugin");\n// 将单个文件或整个目录复制到构建目录。\nconst CopyPlugin = require("copy-webpack-plugin");\n// isProd 判断是否是 生产模式 \nconst isProd = process.env.NODE_ENV === "production";\n\nconst webpackConfig = {\n  // 根据打包命令来\n  mode: process.env.NODE_ENV,\n  // 入口，单个\n  entry: "./demo/index.js",\n  // 输出\n  output: {\n    path: path.resolve(process.cwd(), "./docs/"),\n    filename: "[name].[hash:7].js",\n    // 生产时加上hash\n    chunkFilename: isProd ? "page/[name].[hash:7].js" : "[name].js",\n  },\n  // 解析配置\n  resolve: {\n    // 引用时不写后缀的文件查询顺序 默认[".js", ".vue"]\n    extensions: [".js", ".vue", ".json"],\n    // 配置 import 或 require 的别名，来确保模块引入变得更简单\n    alias: {\n      "@": path.resolve(__dirname, "../src"),\n      packages: path.resolve(__dirname, "../packages"),\n      demo: path.resolve(__dirname, "../demo")\n    }\n  },\n  devServer: {\n    // 默认127.0.0.1，注意 0.0.0.0 时才可以被外部其他主机访问到本地的地址\n    host: "127.0.0.1",\n    //端口 默认8080\n    port: 10001,\n    //此路径下的打包文件可在浏览器中访问。\n    publicPath: "/",\n    // 代理配置\n    proxy: [\n      {\n        // 正则匹配的路径\n        context: [\'/auth\', \'/api\'],\n        // 代理请求的地址\n        target: \'http://localhost:3000\',\n      },\n    ],\n  },\n  module: {\n    rules: [\n      {\n        // 优先级 可能的值有："pre" | "post"指定 loader 种类。没有值表示是普通 loader。\n        // Pitching 阶段: loader 上的 pitch 方法，\n        // 按照 后置(post)、行内(inline)、普通(normal)、前置(pre) 的顺序调用。\n        // Normal 阶段: loader 上的 常规方法，\n        //按照 前置(pre)、普通(normal)、行内(inline)、后置(post) 的顺序调用。\n        enforce: "pre",\n        // 正则匹配文件\n        test: /\\.(vue|js)$/,\n        // 排除的文件\n        exclude: /node_modules|docs|src/,\n        // 使用的loader\n        loader: "eslint-loader"\n      },\n      {\n        test: /\\.(jsx?|babel|es6)$/,\n        // include: process.cwd(),\n        include: /node_modules\\/highlight.js/,\n        exclude: /node_modules/,\n        loader: "babel-loader",\n        //loader的配置项和参数，根据loader自身的定义来\n        options: {\n          presets: [\n            [\n              // 一些转换的默认配置，必须配置\n              "@babel/preset-env",\n              {\n                useBuiltIns: "usage",\n                corejs: 3,\n                // caller.target 等于 webpack 配置的 target 选项\n                targets: { ie: "11" }\n              }\n            ]\n          ]\n        }\n      },\n      {\n        test: /\\.vue$/,\n        loader: "vue-loader",\n        options: {\n          compilerOptions: {\n            // 设置为 false，模版中 HTML 标签之间的空格将会被忽略。\n            preserveWhitespace: false\n          }\n        }\n      },\n      {\n        test: /\\.(scss|css)$/,\n        use: [\n          // 生产时进行css压缩打包优化\n          isProd\n            ? {\n               // 生成环境使用 css抽离的plgin待的loader\n                loader: MiniCssExtractPlugin.loader,\n                options: {\n                  publicPath: "../"\n                }\n              }\n            : "style-loader",\n          "css-loader",\n          {\n            loader: "sass-loader",\n            options: {\n              // 共享全局变量配置  注意：sass-loader 版本 = 8\n              prependData: `@import "src/scss/varibles.scss";`\n            }\n          }\n        ]\n      },\n      {\n        // 添加图片等不识别的路径处理\n        test: /\\.(svg|otf|ttf|woff2?|eot|gif|png|jpe?g)(\\?\\S*)?$/,\n        loader: "url-loader?limit=8192&name=font/[hash:8].[name].[ext]"\n      }\n    ]\n  },\n  plugins: [\n    // 开启热更新\n    new webpack.HotModuleReplacementPlugin(),\n    // 使用模板文件生成最终文件\n    new HtmlWebpackPlugin({\n      template: "./demo/index.tpl",\n      filename: "./index.html",\n      favicon: "./public/favicon.ico",\n      title: "reasy-ui"\n    }),\n    // 配置打包进度显示\n    new ProgressBarPlugin(),\n    // 配合vue-loader使用。 有vue时必须使用\n    new VueLoaderPlugin(),\n    // 定义宏，可以在代码中使用,如果代码中没有宏可以不用处理\n    new webpack.DefinePlugin({\n      "process.env.FAAS_ENV": JSON.stringify(process.env.FAAS_ENV),\n      "process.env.THEME": JSON.stringify(process.env.THEME)\n    }),\n  ],\n  // 配置source map\n  devtool: "#eval-source-map"\n};\n// 判断是否为生产模式\n// 部分优化只在生产模式中运行\nif (isProd) {\n  // 使用外部扩展，打包的时候，需要过滤的bundle ， 正常项目中一般不用配置此项，直接打包成bundle\n  webpackConfig.externals = {\n    vue: "Vue",\n    "vue-router": "VueRouter",\n    "highlight.js": "hljs"\n  };\n  \n  webpackConfig.plugins.push(\n    // 增加清用于在打包前清理上一次项目生成的 bundle 文件。\n    new CleanWebpackPlugin(),\n    // 配置抽离css的插件，并配置css的名称\n    new MiniCssExtractPlugin({\n      // 指定输出的每个 CSS 文件的名称。增加内容hash 只有内容变化才会生成新的hash\n      filename: "css/[name].[contenthash:7].css"\n    }),\n    // 复制文件到指定位置\n    new CopyPlugin({\n      patterns: [{ \n          // 解析完整路径\n          from: path.resolve(process.cwd(), "./img/"), \n          // 复制到指定位置\n          to: "img" \n       }]\n    })\n  );\n  // 启用并配置js压缩插件的打包处理\n  webpackConfig.optimization.minimizer.push(\n    new UglifyJsPlugin({\n      // 启用文件缓存 如果是路径 则是 启用文件缓存并缓存到固定的路径\n      cache: true,\n      // 使用多进程并行运行以提高构建速度\n      parallel: true,\n      // 使用源映射将错误信息位置映射到模块（这将会减慢编译速度）\n      sourceMap: false\n    }),\n    // 启用css优化压缩插件\n    new OptimizeCSSAssetsPlugin({})\n  );\n  // 分离chunk\n  webpackConfig.optimization.splitChunks = {\n    cacheGroups: {\n      // 生成的chunk的key\n      lang: {\n        // 正则匹配路径\n        test: /lang.js/,\n        // 生成chunk的名称\n        name: "lang"\n      },\n      vendor: {\n        test: /[\\\\/]src[\\\\/]/,\n        name: "reasy-ui",\n        // chunks这表明将选择哪些 chunk 进行优化。有效值为 all，async 和 initial。\n        // 设置为 all 可能特别强大，因为这意味着 chunk 可以在异步和非异步 chunk 之间共享。\n        chunks: "all"\n      }\n    }\n  };\n  // 生产环境下 不需要开发工具，即不用生成map文件\n  webpackConfig.devtool = false;\n}\n\nmodule.exports = webpackConfig;\n')])])},function(){var e=this,n=e._self._c;return n("h2",{attrs:{id:"chang-yong-vue.config.jspei-zhi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#chang-yong-vue.config.jspei-zhi"}},[e._v("¶")]),e._v(" - 常用vue.config.js配置")])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v("npm i copy-webpack-plugin@6.1.1 -D\nnpm i @reasy-team/reasy-ui -D\nnpm i axios -D\n\n")])])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-javascript"},[e._v('//vue.config.js\n// 解析sass文件\nconst sassLoader = require.resolve("sass-loader");\n// 将单个文件或整个目录复制到构建目录。 注意版本 6.1.1 \nconst CopyWebpackPlugin = require("copy-webpack-plugin");\n// 显示打包构建进度的插件\nconst ProgressBarPlugin = require("progress-bar-webpack-plugin");\n// 解析当前路径\nconst path = require("path");\n\nfunction resolve(dir) {\n  return path.join(__dirname, dir);\n}\n\nmodule.exports = {\n  pages: { \n    index: {\n      // page 的入口\n      entry: "src/main.js",\n      // 模板来源\n      template: "public/index.html",\n      // 在 dist/index.html 的输出\n      filename: "index.html",\n      // 当使用 title 选项时，\n      // template 中的 title 标签需要是 <title><%= htmlWebpackPlugin.options.title %></title>\n      title: "Tenda",\n      // 在这个页面中包含的块，默认情况下会包含提取出来的通用 chunk 和 vendor chunk。\n      chunks: ["chunk-vendors", "chunk-common", "index"]\n    },\n    login: {\n      entry: "src/login.js",\n      template: "public/index.html",\n      filename: "login.html",\n      title: "Tenda",\n      chunks: ["chunk-vendors", "chunk-common", "login"]\n    }\n  },\n  publicPath: "/",\n  devServer: {\n    proxy: {\n      // 模板页面 10002\n      "/ad/*": {\n        target: "http://localhost:10002",\n        // 重写路径\n        pathRewrite: { "^/ad": "" },\n        // 代理时会保留主机头的来源，可以将 changeOrigin 设置为 true 以覆盖此行为\n        changeOrigin: true,\n        // 默认将不接受在 HTTPS 上运行且证书无效的后端服务器，若需要的话，则关闭此项\n        secure: false\n      },\n      "/*": {\n        target: "http://localhost:8888",\n        changeOrigin: true,\n        secure: false,\n        bypass: function (req, res) {\n          if (req.method == "GET") {\n            return res.url;\n          }\n        }\n      }\n    },\n    // 修改打印只显示错误，不显示警告\n    stats: "errors-only",\n    progress: false\n  },\n  css: {\n    // 配置 css 的输出文件配置，实际配置的就是MiniCssExtractPlugin \n    extract: {\n      filename: "css/[name].css",\n      chunkFilename: "css/[name].css?[contenthash:8]"\n    },\n    // 配置css的解析loader\n    loaderOptions: {\n      scss: {\n        // 共享全局变量配置\n        prependData: \'@import "./src/common/css/variables.scss";\'\n      },\n      postcss: {\n        plugins: [\n          // 根据兼容情况，自动添加前缀。\n          require("autoprefixer")({ overrideBrowserslist: ["ie >= 11"] })\n        ]\n      }\n    }\n  },\n  configureWebpack: config => {\n    // 判断生产环境\n    if (process.env.NODE_ENV === "production") {\n      // 修改出口文件哈希\n      config.output.chunkFilename = "js/[name].js?[contenthash:8]";\n      \n      // 分割文件配置\n      config.optimization.splitChunks = {\n        cacheGroups: {\n          vendors: {\n            name: "chunk-vendors",\n            test: /[\\\\/]node_modules[\\\\/]/,\n            priority: -10,\n            chunks: "initial"\n          },\n          common: {\n            name: "chunk-common",\n            minChunks: 2,\n            priority: -20,\n            chunks: "all",\n            reuseExistingChunk: true,\n            enforce: true\n          }\n        }\n      };\n    } else {\n      // 配置 source-map\n      config.devtool = "source-map";\n    }\n    \n    // 添加plugin\n    config.plugins.push(\n      // 复制文件到指定位置\n      new CopyWebpackPlugin({\n        patterns: [\n          {\n            // 原始路径\n            from: "./src/assets/lang/",\n            // 复制到指定路径\n            to: "./lang/",\n            // 复制方式 整个文件夹\n            toType: "dir",\n            globOptions: {\n              //ignore: [\'**/b28n.*\'],\n            }\n          }\n        ]\n      })\n    );\n  },\n  chainWebpack: config => {\n    // 设置 @\n    config.resolve.alias.set("@", resolve("src"));\n    // 设置svg 的解析处理\n    const svgRule = config.module.rule("svg");\n    // 用于 url-loader 小于1000kb的都生产dataURL\n    let urlLoaderOptions = { \n      limit: 1000,\n      name: "fonts/[name].[ext]?[contenthash:8]"\n    };\n    // 清除已有的所有 loader。\n    // 如果你不这样做，接下来的 loader 会附加在该规则现有的 loader 之后。\n    svgRule.uses.clear();\n    // 压缩图片\n    config.module\n      .rule("fonts")\n      .use("url-loader")\n      .loader("url-loader")\n      .options(urlLoaderOptions),\n      svgRule.use("url-loader").loader("url-loader").options(urlLoaderOptions),\n      config.module\n        .rule("images")\n        .use("url-loader")\n        .loader("url-loader")\n        .options(urlLoaderOptions),\n      config.output.filename("js/[name].js?[hash:8]").end();\n  }\n};\n\n\n')])])}],r=t("2877"),i={},o=Object(r["a"])(i,s,a,!1,null,null,null);n["default"]=o.exports}}]);